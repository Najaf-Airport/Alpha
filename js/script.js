// js/script.js import { auth, db } from "./firebase-init.js"; import { signInWithEmailAndPassword, onAuthStateChanged, signOut } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-auth.js"; import { collection, collectionGroup, doc, setDoc, getDocs, query } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore.js"; import { exportSingleFlightToDocx, exportAdminDataToDocx } from './docx-export.js';

const ADMIN_EMAIL = 'ahmedaltalqani@gmail.com';

// --- DOM Elements --- let loginForm, emailInput, passwordInput, loginMessage; let logoutBtn, userEmailSpan; let welcomeMessage, flightFormsContainer, saveAllFlightsBtn, messageContainer, userPastFlightsTableBody, currentMonthNameSpan; let filterMonthInput, filterUserSelect, applyFiltersBtn, userStatsContainer, totalFlightsCountSpan; let exportAdminStatsBtn, exportAdminAllFlightsBtn;

// --- Initialization --- document.addEventListener('DOMContentLoaded', () => { // Shared elements logoutBtn = document.getElementById('logoutBtn'); userEmailSpan = document.getElementById('userEmail'); if (logoutBtn) logoutBtn.addEventListener('click', handleLogout);

// Login page if (document.getElementById('loginView')) { loginForm = document.getElementById('loginForm'); emailInput = document.getElementById('email'); passwordInput = document.getElementById('password'); loginMessage = document.getElementById('loginMessage'); if (loginForm) loginForm.addEventListener('submit', handleLogin); }

// Flights page if (document.getElementById('flightsView')) { welcomeMessage = document.getElementById('welcomeMessage'); flightFormsContainer = document.getElementById('flightFormsContainer'); saveAllFlightsBtn = document.getElementById('saveAllFlightsBtn'); messageContainer = document.getElementById('messageContainer'); userPastFlightsTableBody = document.querySelector('#userPastFlightsTable tbody'); currentMonthNameSpan = document.getElementById('currentMonthName'); if (saveAllFlightsBtn) saveAllFlightsBtn.addEventListener('click', saveAllFlights); generateFlightForms(4); const today = new Date(); currentMonthNameSpan.textContent = today.toLocaleString('ar-IQ', { month: 'long' }); }

// Admin page if (document.getElementById('adminView')) { filterMonthInput = document.getElementById('filterMonth'); filterUserSelect = document.getElementById('filterUser'); applyFiltersBtn = document.getElementById('applyFiltersBtn'); userStatsContainer = document.getElementById('userStatsContainer'); totalFlightsCountSpan = document.getElementById('totalFlightsCount'); exportAdminStatsBtn = document.getElementById('exportAdminStatsToWordBtn'); exportAdminAllFlightsBtn = document.getElementById('exportAdminAllFlightsToWordBtn'); if (applyFiltersBtn) applyFiltersBtn.addEventListener('click', loadAdminData); if (exportAdminStatsBtn) exportAdminStatsBtn.addEventListener('click', () => exportAdminDataToWord('stats')); if (exportAdminAllFlightsBtn) exportAdminAllFlightsBtn.addEventListener('click', () => exportAdminDataToWord('allFlights')); const today = new Date(); filterMonthInput.value = ${today.getFullYear()}-${(today.getMonth()+1).toString().padStart(2,'0')}; }

// Monitor Auth State onAuthStateChanged(auth, user => { if (user) { userEmailSpan.textContent = user.email; logoutBtn.style.display = 'inline-block'; if (user.email === ADMIN_EMAIL) { if (!window.location.pathname.includes('admin.html')) { window.location.href = 'admin.html'; } else { loadAdminData(); } } else { if (!window.location.pathname.includes('flights.html')) { window.location.href = 'flights.html'; } else { welcomeMessage.textContent = مرحباً بك، ${user.email}; loadUserFlights(user.uid); } } } else { if (!window.location.pathname.includes('index.html')) { window.location.href = 'index.html'; } if (logoutBtn) logoutBtn.style.display = 'none'; } }); });

// --- Auth Handlers --- async function handleLogin(e) { e.preventDefault(); try { await signInWithEmailAndPassword(auth, emailInput.value.trim(), passwordInput.value.trim()); } catch (err) { showMessage(loginMessage, 'خطأ في البريد أو كلمة المرور.', true); } }

function handleLogout() { signOut(auth); }

// --- Flight Forms --- function generateFlightForms(num) { flightFormsContainer.innerHTML = ''; for (let i=0; i<num; i++) { const card = document.createElement('div'); card.className = 'flight-card'; card.innerHTML = <h4>رحلة ${i+1}</h4> + ['date','fltNo','onChocksTime','openDoorTime','startCleaningTime', 'completeCleaningTime','readyBoardingTime','startBoardingTime', 'completeBoardingTime','closeDoorTime','offChocksTime','notes'] .map(id =>  <div class="input-group"> <label for="${id}-${i}">${id}</label> <input type="${id==='date'?'date':id==='notes'?'text':'time'}" id="${id}-${i}" name="${id}"${id==='date'? value="${new Date().toISOString().split('T')[0]}" required:''} /> </div>).join(''); flightFormsContainer.appendChild(card); } }

// --- Save Flights to Firestore --- async function saveAllFlights() { const user = auth.currentUser; if (!user || user.email === ADMIN_EMAIL) return; const monthId = new Date().toISOString().slice(0,7); const batchPromises = []; document.querySelectorAll('.flight-card').forEach(card => { const data = {}; card.querySelectorAll('input').forEach(inp => { data[inp.name] = inp.value; }); if (!data.date || !data.fltNo) return; const ref = doc(collection(db, 'months', monthId, 'users', user.uid, 'flights')); // auto ID batchPromises.push(setDoc(ref, { ...data, uid: user.uid, timestamp: new Date().toISOString() })); }); try { await Promise.all(batchPromises); showMessage(messageContainer, 'تم الحفظ بنجاح!', false); loadUserFlights(user.uid); } catch(err) { console.error(err); showMessage(messageContainer, 'فشل حفظ الرحلات.', true); } }

// --- Load User Flights --- async function loadUserFlights(userId) { userPastFlightsTableBody.innerHTML = ''; const monthId = new Date().toISOString().slice(0,7); const q = query(collection(db, 'months', monthId, 'users', userId, 'flights')); const snapshot = await getDocs(q); if (snapshot.empty) { const row = userPastFlightsTableBody.insertRow(); const cell = row.insertCell(); cell.colSpan=13; cell.textContent='لا توجد رحلات'; return; } snapshot.forEach(docSnap => { const f = docSnap.data(); const row = userPastFlightsTableBody.insertRow(); ['date','fltNo','onChocksTime','openDoorTime','startCleaningTime','completeCleaningTime', 'readyBoardingTime','startBoardingTime','completeBoardingTime','closeDoorTime','offChocksTime','notes'] .forEach(key => row.insertCell().textContent = f[key] || ''); const cell = row.insertCell(); const btn = document.createElement('button'); btn.textContent='تصدير'; btn.onclick=()=>exportSingleFlightToDocx(f); cell.appendChild(btn); }); }

// --- Admin Data --- async function loadAdminData() { totalFlightsCountSpan.textContent = 'جار التحميل...'; const monthId = filterMonthInput.value; if (!monthId) return; const q = query(collectionGroup(db, 'flights')); const snapshot = await getDocs(q); const all = snapshot.docs.map(d=>({ id:d.id, ...d.data() })); // Filter by monthId and optionally user const filtered = all.filter(f=>f.date?.startsWith(monthId)); const byUser = filterUserSelect.value; const data = byUser==='all'? filtered: filtered.filter(f=>f.uid===byUser);

// display in table and stats adminAllFlightsTableBody.innerHTML=''; let count=0; data.forEach(f=>{ const row = adminAllFlightsTableBody.insertRow(); ['date','fltNo','onChocksTime','openDoorTime','startCleaningTime','completeCleaningTime', 'readyBoardingTime','startBoardingTime','completeBoardingTime','closeDoorTime','offChocksTime','notes'] .forEach(key=>row.insertCell().textContent=f[key]||''); const cell=row.insertCell(); const btn=document.createElement('button'); btn.textContent='تصدير'; btn.onclick=()=>exportSingleFlightToDocx(f); cell.appendChild(btn); count++; });

totalFlightsCountSpan.textContent = عدد الرحلات الكلي: ${count}; exportAdminDataToDocx('stats'); }

